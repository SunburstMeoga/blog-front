{"remainingRequest":"/Users/apple/Desktop/Dev/blockway/blog/source-newsprk-1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/Dev/blockway/blog/source-newsprk-1/src/components/_Containers/HomeOnePostArea.vue?vue&type=template&id=c9ff8394&","dependencies":[{"path":"/Users/apple/Desktop/Dev/blockway/blog/source-newsprk-1/src/components/_Containers/HomeOnePostArea.vue","mtime":1652597819000},{"path":"/Users/apple/Desktop/Dev/blockway/blog/source-newsprk-1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/Dev/blockway/blog/source-newsprk-1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/apple/Desktop/Dev/blockway/blog/source-newsprk-1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/Dev/blockway/blog/source-newsprk-1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}